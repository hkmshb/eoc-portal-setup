version: '3.0'

services:
  db:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: postgres
    image: postgres:9.6
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./ckan_setup/conf/postgres:/docker-entrypoint-initdb.d/
    networks:
      local:
        aliases:
          - db
  solr:
    build: ./ckan_setup/ckan/contrib/docker/solr
    ports:
     - "8983:8983"
    networks:
      local:
        aliases:
          - solr
  redis:
    image: redis
    ports:
     - "6379:6379"
    networks:
      local:
        aliases:
          - redis
  datapusher:
    build: ./ckan_setup/datapusher
    ports:
      - "8800:8800"
    links:
      - ckan:ckan
    networks:
      local:
        aliases:
          - datapusher
    environment:
      REQUESTS_CA_BUNDLE: "/usr/src/app/cert.pem"
  ckan:
    build:
      context: ./ckan_setup/ckan
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        TEMP_GITHUB_TOKEN: ${TEMP_GITHUB_TOKEN}
    environment:
      CKAN_SITE_URL: ${CKAN_SITE_URL}
      CKAN_DB_USER: ${CKAN_DB_USER}
      CKAN_DB_PASSWORD: ${CKAN_DB_PASSWORD}
      CKAN_DB_HOST: ${CKAN_DB_HOST}
      CKAN_DB_NAME: ${CKAN_DB_NAME}
      CKAN_API_KEY: ${CKAN_API_KEY}
      DATASTORE_NAME: ${DATASTORE_NAME}
      DATASTORE_USERNAME: ${DATASTORE_USERNAME}
      DATA_STORE_PASSWORD: ${DATA_STORE_PASSWORD}
      DEBUG: "${DEBUG}"
      ENV: "prod"
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      GOOGLE_EMAIL: ${GOOGLE_EMAIL}
      GOOGLE_PASSWORD: ${GOOGLE_PASSWORD}
      GOOGLE_ANALYTICS_KEY: ${GOOGLE_ANALYTICS_KEY}
      GATHER2_API_KEY: ${GATHER2_API_KEY}
      GATHER2_RESPONSES_URL: ${GATHER2_RESPONSES_URL}
    command: start
    links:
      - db:db
      - solr:solr
      - redis:redis
    ports:
      - "5000:5000"
    volumes:
      - ./ckan-data:/var/lib/ckan
      - ./logstash-data:/var/lib/ckan/storage
    networks:
      local:
        aliases:
          - ckan

  # nginx:
  #   build:
  #     context: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   links:
  #     - ckan:ckan
  #     - datapusher:datapusher
  #   networks:
  #     local:
  #       aliases:
  #         - data-eocng.local
  #         - nginx

  # sync_cronjob:
  #   build:
  #     context: sync_cronjob
  #     args:
  #       POSTGRES_PASSWORD_DEV: ${POSTGRES_PASSWORD_DEV}
  #   environment:
  #     PGPASSWORD: ${POSTGRES_PASSWORD_DEV}
  # image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.3

  elasticsearch:
    build:
      context: ckan_elk/elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      local:
        aliases:
          - elasticsearch

  kibana:
    build:
      context: ckan_elk/kibana/
      args:
        ELK_VERSION: ${ELK_VERSION}
    volumes:
      - ./ckan_elk/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch
    networks:
      local:
        aliases:
        - kibana
    depends_on:
      - elasticsearch

  logstash:
    build:
      context: ./ckan_setup/elk/logstash/
    volumes:
      - ./ckan_setup/elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./ckan_setup/elk/logstash/dictionary:/usr/share/logstash/dictionary:ro
      - ./ckan_setup/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./ckan_setup/elk/logstash/mapping:/usr/share/logstash/mapping:ro
      - ./ckan_setup/elk/logstash/sql:/usr/share/logstash/sql:ro
      - ./ckan_setup/elk/logstash/_logs:/usr/share/logstash/logs:ro
      - ./logstash-data:/usr/share/logstash/files
    ports:
      - "5001:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
      JDBC_STRING: jdbc:postgresql://host.docker.internal/eha
      POSTGRES_USER: 'hkmshb'
      POSTGRES_PASSWORD: '0p3n'
      CKAN_DB_HOST: host.docker.internal
      PSQL_USER: hkmshb
      PSQL_PASSWORD: 0p3n
      ES_HOST: elasticsearch:9200
    command: start-prod
    networks:
      local:
        aliases:
          - logstash
    depends_on:
      - elasticsearch

volumes:
  db-data:
  solr-data:
  ckan-data:
  logstash-data:

networks:
  local:
